[{"C:\\CODE\\Hacker-House\\client\\src\\index.js":"1","C:\\CODE\\Hacker-House\\client\\src\\reportWebVitals.js":"2","C:\\CODE\\Hacker-House\\client\\src\\main\\App.js":"3","C:\\CODE\\Hacker-House\\client\\src\\main\\MyFetchers.js":"4","C:\\CODE\\Hacker-House\\client\\src\\main\\UsersControllers\\Signup.js":"5","C:\\CODE\\Hacker-House\\client\\src\\main\\UsersControllers\\Login.js":"6","C:\\CODE\\Hacker-House\\client\\src\\main\\HomePage\\HomePostsContainer.js":"7","C:\\CODE\\Hacker-House\\client\\src\\main\\HomePage\\PostCreator.js":"8","C:\\CODE\\Hacker-House\\client\\src\\main\\UserInfo\\UserProfile.js":"9"},{"size":525,"mtime":1610978715067,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1610978715071,"results":"12","hashOfConfig":"11"},{"size":6264,"mtime":1612958551853,"results":"13","hashOfConfig":"11"},{"size":745,"mtime":1611577327770,"results":"14","hashOfConfig":"11"},{"size":8870,"mtime":1612701496103,"results":"15","hashOfConfig":"11"},{"size":5028,"mtime":1612365485829,"results":"16","hashOfConfig":"11"},{"size":6660,"mtime":1612959203663,"results":"17","hashOfConfig":"11"},{"size":9644,"mtime":1612875155116,"results":"18","hashOfConfig":"11"},{"size":1899,"mtime":1612957848110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14eiazv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\CODE\\Hacker-House\\client\\src\\index.js",[],["43","44"],"C:\\CODE\\Hacker-House\\client\\src\\reportWebVitals.js",[],"C:\\CODE\\Hacker-House\\client\\src\\main\\App.js",["45","46"],"import React, { Component } from \"react\";\r\nimport \"./Style/style.css\";\r\nimport Signup from \"./UsersControllers/Signup\";\r\nimport Login from \"./UsersControllers/Login\";\r\nimport HomePostsContainer from \"./HomePage/HomePostsContainer\";\r\nimport PostCreator from \"./HomePage/PostCreator\";\r\nimport UserProfile from \"./UserInfo/UserProfile\";\r\nimport { myGetFetcher } from \"./MyFetchers\";\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Id: \"idForTest\",\r\n      Name: \"Pape M Ndiaye\",\r\n      Email: \"pmomar44@gmail.com\",\r\n      ProfilePicture: \"nimp\",\r\n      // IsUserLogin: false,\r\n      IsUserLogin: true,\r\n    };\r\n    this.handleUserLogin = this.handleUserLogin.bind(this);\r\n    this.findUserInfos = this.findUserInfos.bind(this);\r\n    this.toggleToGetHome = this.toggleToGetHome.bind(this);\r\n  }\r\n  //? ####################################################\r\n  async findUserInfos(UserEmail) {\r\n    let UserInDb = await myGetFetcher(\r\n      `/Users/get-user-infos/${UserEmail}`\r\n    );\r\n    return UserInDb;\r\n  }\r\n  //? ####################################################\r\n  async handleUserLogin(childData) {\r\n    console.log(childData);\r\n    if (childData.TheUserIsLogin) {\r\n      this.setState({\r\n        IsUserLogin: childData.TheUserIsLogin,\r\n      });\r\n      let userInfos = await this.findUserInfos(childData.Email);\r\n      console.log(userInfos.User);\r\n    }\r\n  }\r\n  //? ####################################################\r\n  async toggleToGetHome(childData) {\r\n    console.log(childData);\r\n  }\r\n  //? ####################################################\r\n  render() {\r\n    if (this.state.IsUserLogin) {\r\n      return (\r\n        <div id=\"home_page_container\">\r\n          <BrowserRouter>\r\n            {/* <Redirect to={\"/User-Profile\"} /> */}\r\n            {/* <Redirect to={\"/Creat-new-post\"} /> */}\r\n            <Redirect to={\"/Home\"} />\r\n            <Mune />\r\n            <TopBar />\r\n            <Switch>\r\n              {/* <Route\r\n                exact\r\n                path={\"/User-Profile\"}\r\n                render={(props) => (\r\n                  <UserProfile\r\n                    {...props}\r\n                    UserName={this.state.Name}\r\n                    UserId={this.state.Id}\r\n                    UserProfilePicture={this.state.ProfilePicture}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Route\r\n                exact\r\n                path={\"/Creat-new-post\"}\r\n                render={(props) => (\r\n                  <PostCreator\r\n                    {...props}\r\n                    onGetHome={this.toggleToGetHome}\r\n                    UserName={this.state.Name}\r\n                    UserId={this.state.Id}\r\n                    UserProfilePicture={this.state.ProfilePicture}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path={\"/Home\"}\r\n                render={(props) => (\r\n                  <HomePostsContainer\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <BrowserRouter>\r\n          <Redirect to={\"/login\"} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={\"/SignUp\"}\r\n              render={(props) => (\r\n                <Signup onUserLogin={this.handleUserLogin} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={\"/login\"}\r\n              render={(props) => (\r\n                <Login {...props} onUserLogin={this.handleUserLogin} />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const Form = ({ type, name, onchange, maxLength, minLength }) => {\r\n  return (\r\n    <div>\r\n      {name !== \"PasswordConfirmation\" ? (\r\n        <label htmlFor={name}>{name}</label>\r\n      ) : (\r\n          <label htmlFor={name}>Confirmation</label>\r\n        )}\r\n      <input\r\n        required\r\n        type={type}\r\n        name={name}\r\n        id={name}\r\n        className=\"forms\"\r\n        maxLength={maxLength}\r\n        minLength={minLength}\r\n        onChange={onchange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n//? #####################################################################\r\n\r\nclass TopBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"top-bar-container\">\r\n        </div>\r\n      </BrowserRouter>);\r\n  }\r\n}\r\n\r\n\r\nclass Mune extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sendPost = this.sendPost.bind(this)\r\n    this.goToCreatPost = this.goToCreatPost.bind(this)\r\n  }\r\n\r\n  sendPost = () => {\r\n    document.querySelector('.hidden-post-send').click()\r\n  }\r\n  goToCreatPost = () => {\r\n    let link = document.querySelector('#go-to-creat-post-link')\r\n    if (link) {\r\n      link.click()\r\n      document.querySelector('.menu-for-post-creation-background').style.display = 'flex';\r\n      document.querySelector('.menu-home-background').style.display = 'none';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div id=\"menu-container\">\r\n          <div className=\"menu-for-post-creation-background\">\r\n            <div className=\"menu-for-post-creation\">\r\n              <div className=\"go-to-profile-page\">\r\n              </div>\r\n              <div className=\"send-post\"\r\n                onClick={this.sendPost}\r\n              >\r\n                Send\r\n            </div >\r\n            </div>\r\n          </div>\r\n\r\n          <div className='menu-home-background'>\r\n            <div className=\"menu-container-for-home\">\r\n              <div className=\"go-to-profile-page\">\r\n              </div>\r\n              <div className=\"go-to-creat-post\"\r\n                onClick={this.goToCreatPost}\r\n              >\r\n              </div >\r\n              <div className=\"go-on-top\"\r\n              >\r\n              </div >\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </BrowserRouter>);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\CODE\\Hacker-House\\client\\src\\main\\MyFetchers.js",[],"C:\\CODE\\Hacker-House\\client\\src\\main\\UsersControllers\\Signup.js",["47"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { myPostFetcher } from '../MyFetchers';\r\nimport Compressor from 'compressorjs';\r\nimport _get from 'lodash.get';\r\n// #############################\r\nimport Bottom from '../Style/images/bottom-line.svg';\r\nimport Top from '../Style/images/top-line.svg';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Name: \"\",\r\n            Email: \"\",\r\n            Password: \"default_password\",\r\n            PasswordConfirmation: \"\",\r\n            ProfilePicture: \"\",\r\n            TheUserIsLogin: false,\r\n        };\r\n        this.uploadImage = this.uploadImage.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.deleteLastImage = this.deleteLastImage.bind(this);\r\n        // this.handleSignUp = this.handleSignUp.bind(this);\r\n    }\r\n    // ##################################################################\r\n    handleChange(e) {\r\n        const theFormName = e.target.name;\r\n        const theFormValue = e.target.value.trim();\r\n        this.setState({\r\n            [theFormName]: theFormValue.replace(/(\\n)+/g, \"\\n\"),\r\n        });\r\n    }\r\n    // ##################################################################\r\n    handleChange(e) {\r\n        const theFormName = e.target.name;\r\n        const theFormValue = e.target.value;\r\n        this.setState({\r\n            [theFormName]: theFormValue,\r\n        });\r\n\r\n    }\r\n    // ##################################################################\r\n    async deleteLastImage() {\r\n        let imageName = document.querySelector(\r\n            \"#image-name\"\r\n        );\r\n        imageName.innerHTML = \"\"\r\n        document.querySelector(\".profilePicture-container\").style.backgroundImage = \"\";\r\n        await document.getElementById(\"hidden_file_input\").click();\r\n        let ProfilePictureToDelete = await document.querySelector(\r\n            \"#image-id-to-delete\"\r\n        ).innerHTML\r\n\r\n        if (ProfilePictureToDelete !== \"\") {\r\n            fetch(`/files/${ProfilePictureToDelete}`, {\r\n                method: \"delete\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json; charset=utf-8\",\r\n                },\r\n            });\r\n        }\r\n    }\r\n    // ##################################################################\r\n    async uploadImage() {\r\n        const allFileInfos = document.getElementById(\"hidden_file_input\");\r\n        // Compressor for compress my files before send in db\r\n        await new Compressor(allFileInfos.files[0], {\r\n            quality: 0.1,\r\n            async success(result) {\r\n                const formData = new FormData();\r\n                formData.append(\"file\", result);\r\n                // #######################\r\n                let response = await fetch(\"/upload\", {\r\n                    method: \"post\",\r\n                    body: formData,\r\n                });\r\n                // #######################\r\n                let pictureInServer = await response.json();\r\n                let theFile = await _get(pictureInServer, \"file.filename\");\r\n                let theFileId = await _get(pictureInServer, \"file.id\");\r\n                if ((theFile !== undefined) & (theFileId !== undefined)) {\r\n                    document.querySelector(\r\n                        \".profilePicture-container\"\r\n                    ).style.backgroundImage = `url(image/${theFile})`;\r\n                    // i can`t access to setState in this scop , so i put images infos in Html \r\n                    document.querySelector(\r\n                        \"#image-name\"\r\n                    ).innerHTML = theFile;\r\n                    document.querySelector(\r\n                        \"#image-id-to-delete\"\r\n                    ).innerHTML = theFileId;\r\n                }\r\n            },\r\n            error(err) {\r\n                console.log(err.message);\r\n            },\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"signUp-container\">\r\n                    <div className=\"signUp-container-at-right\">\r\n\r\n                        <div className=\"signUp-box\">\r\n                            {/* the Picture form */}\r\n                            <form\r\n                                className=\"fileInput\"\r\n                                method=\"post\"\r\n                                encType=\"multipart/form-data\"\r\n                            >\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"hidden_file_input\"\r\n                                    name=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={this.uploadImage}\r\n                                />\r\n                            </form>\r\n                            {/* the Forms */}\r\n                            <form className=\"forms-container\"\r\n                            // onSubmit={this.handleSignUp}\r\n                            >\r\n                                <div className=\"container-for-profilePicture-container\">\r\n\r\n                                    <div className=\"profilePicture-container\" onClick={this.deleteLastImage}>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"form-container\">\r\n                                    <Form\r\n                                        type=\"text\"\r\n                                        name=\"Name\"\r\n                                        onchange={this.handleChange}\r\n                                        maxLength={18}\r\n                                        minLength={5}\r\n                                    />\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"form-container\">\r\n                                    <Form type=\"email\" name=\"Email\" onchange={this.handleChange} />\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"form-container form-container-last\">\r\n                                    <Form\r\n                                        type=\"password\"\r\n                                        name=\"Password\"\r\n                                        onchange={this.handleChange}\r\n                                        maxLength={20}\r\n                                        minLength={5}\r\n                                    />\r\n                                    <br />\r\n                                    <Form\r\n                                        type=\"password\"\r\n                                        name=\"PasswordConfirmation\"\r\n                                        onchange={this.handleChange}\r\n                                    />\r\n\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"btn_container\">\r\n                                    <button type=\"submit\" className=\"btn\">\r\n                                        Send\r\n                                     </button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"switch\">\r\n                                I have an account\r\n                                <Link to=\"/login\">\r\n                                    <button type=\"submit\" className=\"btn btn-warning mt-1\">\r\n                                        Login\r\n                                    </button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <img src={Top} className=\"top-line\" alt=\"top-line\" />\r\n                    <img src={Bottom} className=\"bottom-line\" alt=\"bottom-line\" />\r\n                </div>\r\n                <div className=\"hidden\" id=\"image-name\"></div>\r\n                <div className=\"hidden\" id=\"image-id-to-delete\"></div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport const Form = ({ type, name, onchange, maxLength, minLength }) => {\r\n    return (\r\n        <div>\r\n            {name !== \"PasswordConfirmation\" ? (\r\n                <label htmlFor={name}>{name}</label>\r\n            ) : (\r\n                    <label htmlFor={name}>Confirmation</label>\r\n                )}\r\n\r\n            <input\r\n                required\r\n                type={type}\r\n                name={name}\r\n                id={name}\r\n                className=\"forms\"\r\n                maxLength={maxLength}\r\n                minLength={minLength}\r\n                onChange={onchange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SignUp;\r\n","C:\\CODE\\Hacker-House\\client\\src\\main\\UsersControllers\\Login.js",[],"C:\\CODE\\Hacker-House\\client\\src\\main\\HomePage\\HomePostsContainer.js",["48"],"import React, { Component, Fragment } from \"react\";\r\nimport TopResponse from '../Style/images/top-response.svg';\r\nimport { myGetFetcher } from \"../MyFetchers\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass HomePostsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AllPostsArray: [],\r\n            AllPostComponents: []\r\n        }\r\n        this.getLastPostsAndCreatComponents = this.getLastPostsAndCreatComponents.bind(this)\r\n    }\r\n    // ##############################################################################\r\n    async componentDidMount() {\r\n        document.querySelector('.menu-for-post-creation-background').style.display = 'none';\r\n        document.querySelector('.menu-home-background').style.display = 'flex';\r\n        let LastPosts = await myGetFetcher(\"/Posts/get-last-posts\");\r\n        await this.setState({\r\n            AllPostsArray: [...new Set([...LastPosts.allPosts])]\r\n        })\r\n        this.getLastPostsAndCreatComponents(this.state.AllPostsArray)\r\n    }\r\n\r\n    // ##############################################################################\r\n    async getLastPostsAndCreatComponents(data) {\r\n        let postComponent = [];\r\n        await data.map((post) => {\r\n            console.log(post.postImage);\r\n            postComponent.push(\r\n                <Post\r\n                    key={post._id}\r\n                    PostAuthorId={post.postAuthorId}\r\n                    PostAuthorName={post.postAuthorName}\r\n                    PostAuthorPicture={post.postAuthorPicture}\r\n                    PostImage={post.postImage}\r\n                    PostImageId={post.postImageId}\r\n                    PostTitle={post.postTitle}\r\n                    PostBody={post.postBody}\r\n                    PostDate={post.postDate}\r\n                />)\r\n        })\r\n        this.setState({\r\n            AllPostComponents: postComponent\r\n        })\r\n        console.log(this.state.AllPostComponents)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"home-posts-container\">\r\n                    <Link id=\"go-to-creat-post-link\" to=\"/Creat-new-post\">\r\n                    </Link>\r\n                    {this.state.AllPostComponents}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            PostImage: \"\",\r\n            PostBody: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            PostImage: this.props.PostImage\r\n        })\r\n\r\n        if (this.props.PostBody.length > 113) {\r\n            this.setState({\r\n                PostBody: (\r\n                    <p>\r\n                        {this.props.PostBody.slice(0, 113) + \"... \"}\r\n                        {/* <samp onClick={this.sowAlldescription}>Ride-More</samp> */}\r\n                    </p>\r\n                ),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                PostBody: <p>{this.props.PostBody}</p>,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let postImage;\r\n        if (this.props.PostImage !== \"\") {\r\n            postImage = (\r\n                <img\r\n                    onClick={this.handleComment}\r\n                    src={`image/${this.state.PostImage}`}\r\n                    alt={this.props.PostTitle}\r\n                    width=\"100%\"\r\n                />\r\n            );\r\n        } else {\r\n            postImage = null;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"post-container-for-positon\">\r\n                    <div className='the-post-container'>\r\n                        <div className=\"post-author-container\">\r\n                            <div className=\"post-author-picture\">\r\n                            </div>\r\n                            <div>\r\n                                {this.props.PostAuthorName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post-infos_container\">\r\n                            <h4 className=\"post-title\">\r\n                                {this.props.PostTitle}\r\n                            </h4>\r\n                            <div className=\"post-date\">\r\n                                {this.props.PostDate}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post\">\r\n                            <div className=\"post-image\">\r\n                                {postImage}\r\n                            </div>\r\n                            <div className=\"post-body\">\r\n                                {this.state.PostBody}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post-options\">\r\n                            <div className=\"post-comment\">\r\n                                <div className=\"creat-response-container\">\r\n                                    <textarea\r\n                                        name=\"PostDescription\"\r\n                                        id=\"creat-response\"\r\n                                        cols=\"10\"\r\n                                        rows=\"10\"\r\n                                        placeholder=\"Your post...\"\r\n                                    ></textarea>\r\n                                </div >\r\n                                <div className=\"top-response\">\r\n                                    <img src={TopResponse} alt=\"top-response\" />\r\n                                    <div className=\"the-top-response\">\r\n                                        <div className=\"the-top-response-author-infos\">\r\n                                            <h2 className=\"the-top-response-author\">\r\n                                                Pape M Ndiaye\r\n                                            </h2>\r\n                                        </div>\r\n                                        <p className=\"the-top-response-body\">\r\n                                            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                                            Repudiandae corrupti tempora, ducimus aperiam reprehenderit iusto\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div  >\r\n\r\n             </div> */}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default HomePostsContainer;","C:\\CODE\\Hacker-House\\client\\src\\main\\HomePage\\PostCreator.js",[],"C:\\CODE\\Hacker-House\\client\\src\\main\\UserInfo\\UserProfile.js",["49"],"import React, { Component, Fragment } from 'react'\r\n// import Compressor from 'compressorjs';\r\nimport _get from 'lodash.get';\r\n// import { myPostFetcher } from '../MyFetchers'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Id: \"\",\r\n            Name: \"\",\r\n            Email: \"\",\r\n            ProfilePicture: \"\",\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"user-profile-container\">\r\n                    <div className=\"user-profile-infos-container\" >\r\n                        <div className=\"user-profile-infos\">\r\n                            <div className=\"profile-picture-and-name-container\">\r\n                                <div className=\"profile-picture\">\r\n                                </div>\r\n                                <div className=\"user-name\">\r\n                                    {this.props.UserName}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"user-infos-container\">\r\n                                <div className=\"infos-title branches\">\r\n                                </div>\r\n                                <div className=\"infos-title post\">\r\n                                </div>\r\n                                <div className=\"infos-title language\">\r\n                                </div>\r\n                                <div className=\"infos-title technos\">\r\n                                </div>\r\n                                <div className=\"infos-title descripton\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default UserProfile;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":9,"column":50,"nodeType":"56","messageId":"57","endLine":9,"endColumn":54},{"ruleId":"59","severity":1,"message":"60","line":35,"column":5,"nodeType":"61","messageId":"62","endLine":42,"endColumn":6},{"ruleId":"63","severity":1,"message":"64","line":30,"column":31,"nodeType":"65","messageId":"66","endLine":30,"endColumn":33},{"ruleId":"54","severity":1,"message":"67","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'UserProfile' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-dupe-class-members","Duplicate name 'handleChange'.","MethodDefinition","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_get' is defined but never used.","no-global-assign","no-unsafe-negation"]