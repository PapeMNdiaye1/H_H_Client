[{"/home/pape/CODE/Hacker-House/client/src/index.js":"1","/home/pape/CODE/Hacker-House/client/src/reportWebVitals.js":"2","/home/pape/CODE/Hacker-House/client/src/main/App.js":"3","/home/pape/CODE/Hacker-House/client/src/main/MyFetchers.js":"4","/home/pape/CODE/Hacker-House/client/src/main/UsersControllers/Login.js":"5","/home/pape/CODE/Hacker-House/client/src/main/UsersControllers/Signup.js":"6","/home/pape/CODE/Hacker-House/client/src/main/HomePage/PostCreator.js":"7","/home/pape/CODE/Hacker-House/client/src/main/HomePage/HomePostsContainer.js":"8"},{"size":508,"mtime":1610801451943,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610799204381,"results":"11","hashOfConfig":"10"},{"size":5116,"mtime":1612632324209,"results":"12","hashOfConfig":"10"},{"size":723,"mtime":1611493241027,"results":"13","hashOfConfig":"10"},{"size":4894,"mtime":1611494066925,"results":"14","hashOfConfig":"10"},{"size":8656,"mtime":1612627581157,"results":"15","hashOfConfig":"10"},{"size":8107,"mtime":1612627581153,"results":"16","hashOfConfig":"10"},{"size":5610,"mtime":1612627704091,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bkvjeo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"/home/pape/CODE/Hacker-House/client/src/index.js",[],["38","39"],"/home/pape/CODE/Hacker-House/client/src/reportWebVitals.js",[],"/home/pape/CODE/Hacker-House/client/src/main/App.js",[],"/home/pape/CODE/Hacker-House/client/src/main/MyFetchers.js",[],"/home/pape/CODE/Hacker-House/client/src/main/UsersControllers/Login.js",[],"/home/pape/CODE/Hacker-House/client/src/main/UsersControllers/Signup.js",["40"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { myPostFetcher } from '../MyFetchers';\nimport Compressor from 'compressorjs';\nimport _get from 'lodash.get';\n// #############################\nimport Bottom from '../Style/images/bottom-line.svg';\nimport Top from '../Style/images/top-line.svg';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Name: \"\",\n            Email: \"\",\n            Password: \"default_password\",\n            PasswordConfirmation: \"\",\n            ProfilePicture: \"\",\n            TheUserIsLogin: false,\n        };\n        this.uploadImage = this.uploadImage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteLastImage = this.deleteLastImage.bind(this);\n        this.handleSignUp = this.handleSignUp.bind(this);\n    }\n    // ##################################################################\n    handleChange(e) {\n        const theFormName = e.target.name;\n        const theFormValue = e.target.value.trim();\n        this.setState({\n            [theFormName]: theFormValue.replace(/(\\n)+/g, \"\\n\"),\n        });\n    }\n    // ##################################################################\n    handleChange(e) {\n        const theFormName = e.target.name;\n        const theFormValue = e.target.value;\n        this.setState({\n            [theFormName]: theFormValue,\n        });\n\n    }\n    // ##################################################################\n    async deleteLastImage() {\n        let imageName = document.querySelector(\n            \"#image-name\"\n        );\n        imageName.innerHTML = \"\"\n        document.querySelector(\".profilePicture-container\").style.backgroundImage = \"\";\n        await document.getElementById(\"hidden_file_input\").click();\n        let ProfilePictureToDelete = await document.querySelector(\n            \"#image-id-to-delete\"\n        ).innerHTML\n\n        if (ProfilePictureToDelete !== \"\") {\n            fetch(`/files/${ProfilePictureToDelete}`, {\n                method: \"delete\",\n                headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\",\n                },\n            });\n        }\n    }\n    // ##################################################################\n    async uploadImage() {\n        const allFileInfos = document.getElementById(\"hidden_file_input\");\n        // Compressor for compress my files before send in db\n        await new Compressor(allFileInfos.files[0], {\n            quality: 0.1,\n            async success(result) {\n                const formData = new FormData();\n                formData.append(\"file\", result);\n                // #######################\n                let response = await fetch(\"/upload\", {\n                    method: \"post\",\n                    body: formData,\n                });\n                // #######################\n                let pictureInServer = await response.json();\n                let theFile = await _get(pictureInServer, \"file.filename\");\n                let theFileId = await _get(pictureInServer, \"file.id\");\n                if ((theFile !== undefined) & (theFileId !== undefined)) {\n                    document.querySelector(\n                        \".profilePicture-container\"\n                    ).style.backgroundImage = `url(image/${theFile})`;\n                    // i can`t access to setState in this scop , so i put images infos in Html \n                    document.querySelector(\n                        \"#image-name\"\n                    ).innerHTML = theFile;\n                    document.querySelector(\n                        \"#image-id-to-delete\"\n                    ).innerHTML = theFileId;\n                }\n            },\n            error(err) {\n                console.log(err.message);\n            },\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"signUp-container\">\n                    <div className=\"signUp-container-at-right\">\n\n                        <div className=\"signUp-box\">\n                            {/* the Picture form */}\n                            <form\n                                className=\"fileInput\"\n                                method=\"post\"\n                                encType=\"multipart/form-data\"\n                            >\n                                <input\n                                    type=\"file\"\n                                    id=\"hidden_file_input\"\n                                    name=\"file\"\n                                    accept=\"image/*\"\n                                    onChange={this.uploadImage}\n                                />\n                            </form>\n                            {/* the Forms */}\n                            <form className=\"forms-container\"\n                                onSubmit={this.handleSignUp}\n                            >\n                                <div className=\"container-for-profilePicture-container\">\n\n                                    <div className=\"profilePicture-container\" onClick={this.deleteLastImage}>\n                                    </div>\n                                </div>\n                                <br />\n                                <div className=\"form-container\">\n                                    <Form\n                                        type=\"text\"\n                                        name=\"Name\"\n                                        onchange={this.handleChange}\n                                        maxLength={18}\n                                        minLength={5}\n                                    />\n                                </div>\n                                <br />\n                                <div className=\"form-container\">\n                                    <Form type=\"email\" name=\"Email\" onchange={this.handleChange} />\n                                </div>\n                                <br />\n                                <div className=\"form-container form-container-last\">\n                                    <Form\n                                        type=\"password\"\n                                        name=\"Password\"\n                                        onchange={this.handleChange}\n                                        maxLength={20}\n                                        minLength={5}\n                                    />\n                                    <br />\n                                    <Form\n                                        type=\"password\"\n                                        name=\"PasswordConfirmation\"\n                                        onchange={this.handleChange}\n                                    />\n\n                                </div>\n                                <br />\n                                <div className=\"btn_container\">\n                                    <button type=\"submit\" className=\"btn\">\n                                        Send\n                                     </button>\n                                </div>\n                            </form>\n                            <div className=\"switch\">\n                                I have an account\n                                <Link to=\"/login\">\n                                    <button type=\"submit\" className=\"btn btn-warning mt-1\">\n                                        Login\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                    <img src={Top} className=\"top-line\" alt=\"top-line\" />\n                    <img src={Bottom} className=\"bottom-line\" alt=\"bottom-line\" />\n                </div>\n                <div className=\"hidden\" id=\"image-name\"></div>\n                <div className=\"hidden\" id=\"image-id-to-delete\"></div>\n            </React.Fragment >\n        )\n    }\n}\n\nexport const Form = ({ type, name, onchange, maxLength, minLength }) => {\n    return (\n        <div>\n            {name !== \"PasswordConfirmation\" ? (\n                <label htmlFor={name}>{name}</label>\n            ) : (\n                    <label htmlFor={name}>Confirmation</label>\n                )}\n\n            <input\n                required\n                type={type}\n                name={name}\n                id={name}\n                className=\"forms\"\n                maxLength={maxLength}\n                minLength={minLength}\n                onChange={onchange}\n            />\n        </div>\n    );\n};\n\n\nexport default SignUp;\n","/home/pape/CODE/Hacker-House/client/src/main/HomePage/PostCreator.js",[],"/home/pape/CODE/Hacker-House/client/src/main/HomePage/HomePostsContainer.js",["41"],"import React, { Component, Fragment } from \"react\";\nimport TopResponse from '../Style/images/top-response.svg';\nimport { myGetFetcher } from \"../MyFetchers\";\n\n\n\n\n\nclass HomePostsContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            AllPostsArray: [],\n            AllPostComponents: []\n        }\n        this.getLastPostsAndCreatComponents = this.getLastPostsAndCreatComponents.bind(this)\n    }\n\n\n    // ##############################################################################\n    async componentDidMount() {\n        let LastPosts = await myGetFetcher(\"/Posts/get-last-posts\");\n        await this.setState({\n            AllPostsArray: [...new Set([...LastPosts.allPosts])]\n        })\n        // console.log(this.state.AllPostsArray)\n        this.getLastPostsAndCreatComponents(this.state.AllPostsArray)\n    }\n    // ##############################################################################\n    async getLastPostsAndCreatComponents(data) {\n        let postComponent = [];\n        await data.map((post) => {\n            console.log(post.postImage);\n            postComponent.push(\n                <Post\n                    key={post._id}\n                    PostAuthorId={post.postAuthorId}\n                    PostAuthorName={post.postAuthorName}\n                    PostAuthorPicture={post.postAuthorPicture}\n                    PostImage={post.postImage}\n                    PostImageId={post.postImageId}\n                    PostTitle={post.postTitle}\n                    PostBody={post.postBody}\n                    PostDate={post.postDate}\n\n                />)\n        })\n\n        this.setState({\n            AllPostComponents: postComponent\n        })\n        console.log(this.state.AllPostComponents)\n\n\n    }\n\n\n\n    render() {\n        return (\n            <Fragment>\n                <div id=\"home-posts-container\">\n                    {this.state.AllPostComponents}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <Fragment>\n                <div className=\"post-container-for-positon\">\n                    <div className='the-post-container'>\n                        <div className=\"post-author-container\">\n                            <div className=\"post-author-picture\">\n                            </div>\n                            <div>\n                                {this.props.PostAuthorName}\n                            </div>\n                        </div>\n                        <div className=\"post-infos_container\">\n                            <div className=\"post-title\">\n                                {this.props.PostTitle}\n                            </div>\n                            <div className=\"post-date\">\n                                {this.props.PostDate}\n                            </div>\n                        </div>\n                        <div className=\"post\">\n                            <div className=\"post-image\">\n                                <img\n                                    onClick={this.handleComment}\n                                    src={`image/${this.props.PostImage}`}\n                                    alt={this.props.ostTitle}\n                                    width=\"100%\"\n                                />\n                            </div>\n                            <div className=\"post-body\">\n                                {this.props.PostBody}\n                            </div>\n                        </div>\n                        <div className=\"post-options\">\n                            <div className=\"post-comment\">\n                                <div className=\"creat-response-container\">\n                                    <textarea\n                                        name=\"PostDescription\"\n                                        id=\"creat-response\"\n                                        cols=\"10\"\n                                        rows=\"10\"\n                                        placeholder=\"Your post...\"\n                                    ></textarea>\n                                </div >\n                                <div className=\"top-response\">\n                                    <img src={TopResponse} alt=\"top-response\" />\n                                    <div className=\"the-top-response\">\n                                        <div className=\"the-top-response-author-infos\">\n                                            <div className=\"the-top-response-author\">\n                                                Pape M Ndiaye\n                                            </div>\n                                        </div>\n                                        <div className=\"the-top-response-body\">\n                                            Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                            Repudiandae corrupti tempora, ducimus aperiam reprehenderit iusto\n                                            sapiente numquam ipsa quas at sequi cumque voluptatum porro ad est eius?\n                                            Aut labore molestias!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\n\n\n\nexport default HomePostsContainer;",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":35,"column":5,"nodeType":"50","messageId":"51","endLine":42,"endColumn":6},{"ruleId":"52","severity":1,"message":"53","line":32,"column":31,"nodeType":"54","messageId":"55","endLine":32,"endColumn":33},{"ruleId":"44","replacedBy":"56"},{"ruleId":"46","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-dupe-class-members","Duplicate name 'handleChange'.","MethodDefinition","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["58"],["59"],"no-global-assign","no-unsafe-negation"]